plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        test {
            java.srcDirs += "$projectDir/src/testShared"
        }
    }
}

ext {
    retrofit2Version = project.RETROFIT2_VERSION
    retrofit2GsonVersion = project.RETROFIT2_GSON_VERSION
    coroutineVersion = project.COROUTINE_VERSION
    hiltVersion = project.HILT_VERSION
    assertJVersion = project.ASSERTJ_VERSION
    kotlinMock2Version = project.MOCK_KT2_VERSION
    mockitoCoreVersion = project.MOCKITO_CORE_VERSION
    coroutineTestVersion = project.COROUTINE_TEST_VERSION
    okHttpVersion = project.OKHTTP_VERSION
    retrofit2CoroutineVersion = project.RETROFIT2_COROUTINE_VERSION
    junitVersion = project.JUNIT_VERSION
}

dependencies {
    /**
     * Implementations
     */
    implementation "com.squareup.retrofit2:retrofit:${retrofit2Version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit2GsonVersion}"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${retrofit2CoroutineVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutineVersion}"
    implementation "com.google.dagger:hilt-android:${hiltVersion}"
    kapt "com.google.dagger:hilt-android-compiler:${hiltVersion}"

    /**
     * Unit Testing
     */
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoCoreVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoCoreVersion}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${kotlinMock2Version}"
    testImplementation "org.assertj:assertj-core:${assertJVersion}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutineTestVersion}"
    testImplementation "com.squareup.okhttp3:okhttp:${okHttpVersion}"
}